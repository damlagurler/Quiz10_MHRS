<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_profilRandevuOzet.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QC2RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB0AAAAOAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAA
        dgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA4ADAAKQAsACAAcQB1AGEA
        bABpAHQAeQAgAD0AIAA5ADAACgAAAAAA/9sAQwACAQECAQECAgICAgICAgMFAwMDAwMGBAQDBQcGBwcH
        BgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMGAwMGDAgHCAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAMgAyAwEiAAIRAQMR
        Af/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE
        EQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElK
        U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAAB
        AgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkj
        M1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5
        eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm
        5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/fykd1jQsxCqoySTgAUtUfEugw+KvDmoaXctItvqVtJa
        ymNtrhHUqdp7HBODQB/I/wD8FqP+C+nxQ/4KS/HfxBpXhXxRr3hH4H6XczWOg6Bpl3LZrrVsr4F7qG3a
        00s2xXEUmUgBCKC3mSy/NP7D3/BSX40f8E7vibp/ib4W+ONY0VbO5We60WW4km0XWF5DRXdoW8uVWVmG
        7AdN25HRwrjif2pv2avFf7HP7RPjD4X+N7CTTfFHgvUpNOvI2RlWYDDRzx7gC0M0bJLG+MPHIjDgiuBJ
        xV9AP7jv+Cdn7aejf8FD/wBiv4f/ABj0Oxk0u18aacZrjT5JDIdOvIpXt7q3DlVMix3EUqLJtXeqq20B
        sV7VXxl/wb8/sleJP2LP+CTHwp8GeMrG40vxZNb3Wt6nYTqyS6e97dS3McDowDRyxwyRLIhGVkEg7V9m
        1ABRRiigAoor8+/+Dh//AILCv/wSi/ZLtk8JzWr/ABe+Izzaf4VSeDz49MjjVftOpOjAo3kiSMIj5DSy
        xkpIiSrQBT/4LmeBv2BfG2maW37XGteE9B8VWtmsekX1ndTr4rt7VpJNhjis1e5mthIZsCWKSBXaQgBi
        TXzP/wAEiPhB/wAEnPBv7RGk3Xwk8eab43+KFneQyaBcfECa9tZ4boyDyRYw3tva20tyJNhjKRvOrAFC
        p5r+cf4hfETX/i3431TxN4q1rVPEfiLWrhrrUNT1K6e6u72VurySOSzMfUmscjNVygf38UV+C3/BqV/w
        XK8RfE3xZb/sw/GDxBda5evayTfD/W9Qdprt1hQyS6VNKclwsSvLA0nKrHJFvI8iNf3pqQCiiigAr+SD
        /g6m/aOvvj5/wWR8eaZJcrPpHw1sNP8ACmlqq7fLVLdbq4Derfa7q5Geu1VHYAf1v1/KP/wdC/8ABMb4
        kfsx/t/+OfjBJomoat8KvilqI1ex8Q2sbTW+m3ciRiayu2C4t5fN3GIN8ssbLsZnSVI6iB+X9FGaKoDq
        /gR8Zda/Z0+N3g/4geHZEh1/wTrVnrunO43IJ7aZJo9w7qWQAg8EEiv7vPCHimz8c+E9L1rTpPO0/WLS
        K+tZMffilQOh/FWFfw+fsM/sE/FD/gov8eNM+Hvwt8OXWtapeyoL2+dHXTdBtyTuur2cKRDCoDHJyzkB
        I1eRkRv7c/hH8PIPhF8KPDHhO1uJru28MaTa6TFPKMSTJBCkSu3uQgJ9zUyA6GiiipAKg1PTLbW9NuLO
        8t4LyzvImhngmjEkc0bAhkZTwykEgg8EGiigD+dD/g6A/ZS+FvwJ8esvgf4a+AfBqyWccjDQ/D1ppwZy
        gJY+TGvJPJNfD/8AwRL+EnhT4rftH6PY+KPDPh7xJYy3saPb6rp0N5E6lhkFZFYEe2KKKroB/Xj8J/gz
        4P8AgL4Oh8O+BfCfhrwX4ft3aWLTNC0yDTrON2+8ywwqqAnAyQOa6WiipAKKKKAP/9k=
</value>
  </data>
</root>